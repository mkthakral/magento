<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2016 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
/* @var $this Mage_Catalog_Block_Product_List */
?>
<!-- or -->
<script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.js"></script>
<?php
 
  //  print_r($attributeOptions);

	 $currentCategory = Mage::registry('current_category');
     $catid=$currentCategory->getId();

 $catcollections= Mage::getModel('catalog/category')->getCollection()->addAttributeToSelect('*')->addAttributeToFilter('is_active',1)->addAttributeToFilter('parent_id',$catid)->addOrderField('position');
	
if($catid==3){	
$name='paintmedium';
}

if($catid==4){	
$name='drawingmedium';
}

if($catid==5){	
$name='photomedium';
}

if($catid==6){	
$name='sclupmedium';
}
    $attributeInfo = Mage::getResourceModel('eav/entity_attribute_collection')->setCodeFilter($name)->getFirstItem();
    $attributeId = $attributeInfo->getAttributeId();
    $attribute = Mage::getModel('catalog/resource_eav_attribute')->load($attributeId);
    $attributeOptions = $attribute ->getSource()->getAllOptions(false); 
		
?>


<?php if($_REQUEST['submit_action']=="search"){  ?>
<?php


 $price=$_REQUEST['price'];
$expprice=explode("-",$price);
$style=$_REQUEST['style'];
$medium=$_REQUEST['medium'];
?>
<?php if($price!=""){?>
<?php
$_productCollection = Mage::getModel('catalog/product')
                ->getCollection()
                ->joinField('category_id', 'catalog/category_product', 'category_id', 'product_id = entity_id', null, 'left')
                ->addAttributeToSelect('*')
                ->addAttributeToFilter('category_id',$catid)
				 ->addAttributeToFilter('price', array('gt' =>$expprice[0]))
         ->addAttributeToFilter('price', array('lt' =>$expprice[1]));
		 ?>
<?php } else { ?>
  <?php $_productCollection=$this->getLoadedProductCollection(); ?>
<?php } ?>	

<?php if($style!=0){ ?>	 
<?php 
$_productCollection = Mage::getModel('catalog/product')
                ->getCollection()
                ->joinField('category_id', 'catalog/category_product', 'category_id', 'product_id = entity_id', null, 'left')
                ->addAttributeToSelect('*')
                ->addAttributeToFilter('category_id',$style);
				

 ?>
<?php } else{ ?>
<?php $_productCollection=$this->getLoadedProductCollection();  ?>
<?php } ?>
 
 <?php if($medium!=0){ ?>	 
<?php 
$_productCollection = Mage::getModel('catalog/product')
                ->getCollection()
                ->joinField('category_id', 'catalog/category_product', 'category_id', 'product_id = entity_id', null, 'left')
                ->addAttributeToSelect('*')
                ->addAttributeToFilter($name,$medium);
				

 ?>
<?php } else{ ?>
<?php $_productCollection=$this->getLoadedProductCollection();  ?>
<?php } ?>
 
 
<?php } else { 

   $_productCollection=$this->getLoadedProductCollection();
}
?>
<?php 
    $_helper = $this->helper('catalog/output');
	?>
<?php if(!$_productCollection->count()): ?>
<p class="note-msg"><?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: ?>
<form method="get" class="catagory-list-form">
<ul class="catagory-list-ul">
<li>
	<span id="all-style-selected" class="gla-select">All Styles</span>
	<select name="style" onchange="javascript:document.getElementById('all-style-selected').innerHTML=this.options[this.selectedIndex].text;">
	<option value="0">All Styles</option>
	<?php foreach($catcollections as $subcat){?>
	<option value="<?php echo $subcat->getId();  ?>"><?php echo $subcat->getName(); ?></option>
	<?php } ?>

	</select>
</li>
<li>
<span id="all-mediums-selected" class="gla-select">All Mediums</span>
<select name="medium" onchange="javascript:document.getElementById('all-mediums-selected').innerHTML=this.options[this.selectedIndex].text;">
<option value="0">All Mediums</option>
<?php foreach( $attributeOptions  as $med){?>
<option value="<?php echo $med['value'];  ?>"><?php echo $med['label']; ?></option>
<?php } ?>

</select>
</li>
<li>
<span id="all-price-selected" class="gla-select">All Prices</span>
<select name="price" onchange="javascript:document.getElementById('all-price-selected').innerHTML=this.options[this.selectedIndex].text;">
<option value="">All Prices</option>
<option value="0-100">$0-$100</option>
<option value="100-500">$100-$500</option>
<option value="500-1000">$500-$1000</option>

</select>
</li>
</ul>

<button class="form-button" name="submit_action" type="submit" id="filter-search" value="search"><span>SEARCH</span></button>

</form>
  <?php echo $this->getToolbarHtml() ?>
<div class="category-products container">
  
    <?php // List mode ?>
    <?php if($this->getMode()!='grid'): ?>
    <?php $_iterator = 0; ?>
    <ol class="products-list" id="products-list">
    <?php foreach ($_productCollection as $_product): ?>
        < li class="item<?php if( ++$_iterator == sizeof($_productCollection) ): ?> last<?php endif; ?>">
            <?php // Product Image ?>
            <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                <?php /* Based on the native RWD styling, product images are displayed at a max of ~400px wide when viewed on a
                        one column page layout with four product columns from a 1280px viewport. For bandwidth reasons,
                        we are going to serve a 300px image, as it will look fine at 400px and most of the times, the image
                        will be displayed at a smaller size (eg, if two column are being used or viewport is smaller than 1280px).
                        This $_imgSize value could even be decreased further, based on the page layout
                        (one column, two column, three column) and number of product columns. */ ?>
                <?php $_imgSize = 300; ?>
                <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                     src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->keepFrame(false)->resize($_imgSize); ?>"
                     alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
            </a>
            <?php // Product description ?>
            <div class="product-shop">
                <div class="f-fix">
                    <div class="product-primary">
                        <?php $_productNameStripped = $this->stripTags($_product->getName(), null, true); ?>
                        <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped; ?>"><?php echo $_helper->productAttribute($_product, $_product->getName() , 'name'); ?></a></h2>
                        <?php if($_product->getRatingSummary()): ?>
                        <?php echo $this->getReviewsSummaryHtml($_product) ?>
                        <?php endif; ?>
                        <?php
                        // Provides extra blocks on which to hang some features for products in the list
                        // Features providing UI elements targeting this block will display directly below the product name
                        if ($this->getChild('name.after')) {
                            $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                            foreach ($_nameAfterChildren as $_nameAfterChildName) {
                                $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                                $_nameAfterChild->setProduct($_product);
                                echo $_nameAfterChild->toHtml();
                            }
                        }
                        ?>
                    </div>
                    <div class="product-secondary">
                        <?php echo $this->getPriceHtml($_product, true) ?>
                    </div>
                    <div class="product-secondary">
                        <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                            <p class="action"><button type="button" title="<?php echo $this->quoteEscape($this->__('Add to Cart')) ?>" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button></p>
                        <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                            <p class="action"><a title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" class="button" href="<?php echo $_product->getProductUrl() ?>"><?php echo $this->__('View Details') ?></a></p>
                        <?php else: ?>
                            <p class="action availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                        <?php endif; ?>
                        <ul class="add-to-links">
                            <?php if ($this->helper('wishlist')->isAllow()) : ?>
                                <li><a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist"><?php echo $this->__('Add to Wishlist') ?></a></li>
                            <?php endif; ?>
                            <?php if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                                <li><span class="separator">|</span> <a href="<?php echo $_compareUrl ?>" class="link-compare"><?php echo $this->__('Add to Compare') ?></a></li>
                            <?php endif; ?>
                        </ul>
                    </div>
                    <div class="desc std">
                        <?php echo $_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description') ?>
                        <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped ?>" class="link-learn"><?php echo $this->__('Learn More') ?></a>
                    </div>
                </div>
            </div>
        </li>
    <?php endforeach; ?>
    </ol>
    <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>

    <?php else: ?>

    <?php // Grid Mode ?>

    <?php $_collectionSize = $_productCollection->count() ?>
    <?php $_columnCount = 3; ?>
	<div id="container">
    <ul class="products-grid products-grid--max-<?php echo $_columnCount; ?>-col">
        <?php $i=0; foreach ($_productCollection as $_product): ?>
            <?php /*if ($i++%$_columnCount==0): ?>
            <?php endif*/ ?>
            <li class="item<?php if(($i-1)%$_columnCount==0): ?> first<?php elseif($i%$_columnCount==0): ?> last<?php endif; ?>">
                <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
                    <?php $_imgSize = 210; ?>
                    <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                         src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image'); ?>"
                         alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
                
                <div class="product-info">
                   
                    <?php
                    // Provides extra blocks on which to hang some features for products in the list
                    // Features providing UI elements targeting this block will display directly below the product name
                    if ($this->getChild('name.after')) {
                        $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                        foreach ($_nameAfterChildren as $_nameAfterChildName) {
                            $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                            $_nameAfterChild->setProduct($_product);
                            echo $_nameAfterChild->toHtml();
                        }
                    }
                    ?>
					
					<?php 
		$protable= Mage::getSingleton('core/resource')->getTableName('marketplace_product');
		$sqlPaymentSystem1="SELECT * FROM ".$protable." WHERE mageproductid='".$_product->getId()."'";
			try {
				$chkSystem = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlPaymentSystem1);
				$result1= $chkSystem->fetchall();
			}
			catch (Exception $e){
				 echo $e->getMessage();
			}

          foreach($result1 as $res){
			  
		$artisid=$res['userid'];
		  }
    $artiscollection=Mage::getModel('customer/customer')->load($artisid);
		?>
					<?php 
					$product=Mage::getModel('catalog/product')->load($_product->getId());
					$galid=$product->getGalcode();
					$customer =Mage::getModel('customer/customer')->load($galid);
					$galname=$customer->getGaleryname();

					?>
					<?php
					$tableName= Mage::getSingleton('core/resource')->getTableName('like_art');
                    $sqlPaymentSystem1="SELECT * FROM ".$tableName." WHERE  proid='".$_product->getId()."'";
						try {
							$chkSystem = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlPaymentSystem1);
							$like = $chkSystem->fetchall();
						}
						catch (Exception $e){
							 echo $e->getMessage();
						}
			       ?>
				   
				   <?php
					$tableName= Mage::getSingleton('core/resource')->getTableName('follow_art');
                    $sqlPaymentSystem1="SELECT * FROM ".$tableName." WHERE  artistid='".$artisid."'";
						try {
							$chkSystem = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlPaymentSystem1);
							$follow = $chkSystem->fetchall();
						}
						catch (Exception $e){
							 echo $e->getMessage();
						}
			       ?>
					<div class="pro-detls">
						<ul>
						<li class="one"><?php echo count($follow); ?></li>
						<li class="two"><?php echo count($like); ?></li>
						<li class="three"><?php echo $this->getPriceHtml($_product, true) ?></li>
						</ul>
						<p><?php echo $artiscollection->getName(); ?></p>
						<p class="end">Art Endorsed By</p>
						<p><?php echo $galname; ?></p>
					</div>
                    <?php if($_product->getRatingSummary()): ?>
                    <?php // echo $this->getReviewsSummaryHtml($_product, 'short') ?>
                    <?php endif; ?>
					
                    <div class="actions" style="display:none;">
                        <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                            <button type="button" title="<?php echo $this->quoteEscape($this->__('Add to Cart')) ?>" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button>
                        <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                            <a title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" class="button" href="<?php echo $_product->getProductUrl() ?>"><?php echo $this->__('View Details') ?></a>
                        <?php else: ?>
                            <p class="availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                        <?php endif; ?>
                        <ul class="add-to-links">
                            <?php if ($this->helper('wishlist')->isAllow()) : ?>
                                <li><a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist"><?php echo $this->__('Add to Wishlist') ?></a></li>
                            <?php endif; ?>
                            <?php if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                                <li><span class="separator">|</span> <a href="<?php echo $_compareUrl ?>" class="link-compare"><?php echo $this->__('Add to Compare') ?></a></li>
                            <?php endif; ?>
                        </ul>
                    </div>
                </div>
				</a>
            </li>
            <?php /*if ($i%$_columnCount==0 || $i==$_collectionSize): ?>
            <?php endif*/ ?>
        <?php endforeach ?>
    </ul>
	</div>
    <script type="text/javascript">decorateGeneric($$('ul.products-grid'), ['odd','even','first','last'])</script>
    <?php endif; ?>
    
</div>
<?php endif; ?>
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}
?>

